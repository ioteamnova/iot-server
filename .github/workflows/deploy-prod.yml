name: Deploy to EC2

on:
  push:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '19.x'

      # 의존성 설치
      - name: Install Dependencies
        run: npm install

      # Build
      - name: Build
        run: npm run build

      # env
      - name: create env file
        run: |
          touch .env.prod
          echo AWS_ACCESS_KEY_ID=${{ secrets.PROD_AWS_ACCESS_KEY_ID }} >> .env.prod
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.secrets.PROD_AWS_SECRET_KEY }} >> .env.prod
          echo MYSQL_HOST=${{ secrets.PROD_MYSQL_HOST }} >> .env.prod
          echo MYSQL_PORT=${{ secrets.PROD_MYSQL_PORT }} >> .env.prod
          echo MYSQL_USER=${{ secrets.PROD_MYSQL_USER }} >> .env.prod
          echo MYSQL_PASSWORD=${{ secrets.PROD_MYSQL_PASSWORD }} >> .env.prod
          echo MYSQL_DATABASE_NAME= ${{ secrets.PROD_MYSQL_DATABASE_NAME }} >> .env.prod         
          echo MYSQL_LOGGING=${{ secrets.PROD_MYSQL_LOGGING }} >> .env.prod
          echo AWS_BUCKET_NAME=${{ secrets.PROD_AWS_BUCKET_NAME }} >> .env.prod
          echo AWS_BUCKET_REGION=${{ secrets.PROD_AWS_BUCKET_REGION }} >> .env.prod
          echo NODE_MAILER_ID=${{ secrets.PROD_NODE_MAILER_ID }} >> .env.prod
          echo NODE_MAILER_PASSWORD=${{ secrets.PROD_NODE_MAILER_PASSWORD }} >> .env.prod
          echo JWT_SECRET=${{ secrets.PROD_JWT_SECRET }} >> .env.prod
          echo FILE_CONVERTER_IP=${{ secrets.PROD_FILE_CONVERTER_IP }} >> .env.prod
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: 'firebase-adminsdk.json'
          json: ${{ secrets.FIREBASE_ADMIN_SDK_JSON }}

      # zip 파일 생성
      - name: create a zip file
        run: zip -qq -r ./reptimate_server.zip . -x "node_modules/*" "coverage/*" "src/*" "test/*" "README.md" "*.git*"
        shell: bash

      # with에 secrets에서 설정한 key를 설정한다.
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_KEY }}
          aws-region: ${{ secrets.PROD_AWS_BUCKET_REGION }}

      - name: Upload to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_KEY }}
        run: |
          aws s3 cp --region ap-northeast-2 ./reptimate_server.zip s3://reptimate

      - name: Deploy with aws code-deploy
        run: aws deploy create-deployment
          --application-name reptimate-server-deploy
          --deployment-config-name CodeDeployDefault.AllAtOnce
          --deployment-group-name reptimate-server-group
          --s3-location bucket=reptimate,bundleType=zip,key=reptimate_server.zip
